import axios from 'axios';
import fs from 'fs';
import path from 'path';

const config = {
  name: "imageai",
  version: "1.0.0",
  credits: "Deku",
  description: "Search image but generated by AI",
  usage: "[text] - [number of image to show]",
  cooldowns: 50,
};

export async function onCall({ message, args, prefix }) {
  const keySearch = args.join(" ");
  if (!keySearch.includes("-")) return message.reply(`Use : ${prefix}${config.name} Mark Zuckerberg - 10`);

  message.reply("⏱️| Generating The Images Please Wait...");
  const keySearchs = keySearch.substr(0, keySearch.indexOf('-'));
  const numberSearch = keySearch.split("-").pop() || 6;

  const res = await axios.get(`https://free-api.ainz-sama101.repl.co/others/genimg?prompt=${encodeURIComponent(keySearchs)}`);
  const data = res.data.result;

  const imgPaths = [];
  for (let i = 0; i < parseInt(numberSearch); i++) {
    const pathImg = path.join(global.cachePath, `${message.threadID}_imageai_${i + 1}.jpg`);
    const getDown = (await axios.get(`${data[i]}`, { responseType: 'arraybuffer' })).data;

    fs.writeFileSync(pathImg, Buffer.from(getDown, 'utf-8'));
    imgPaths.push(pathImg);
  }

  const imgData = imgPaths.map(imgPath => fs.createReadStream(imgPath));

  await message.reply({
    attachment: imgData,
    body: `Total image: ${data.length}\nShowing ${numberSearch} generated images for ${keySearchs}\nGenerated by ai`
  });

  for (let i = 0; i < parseInt(numberSearch); i++) {
    fs.unlinkSync(imgPaths[i]);
  }
}
